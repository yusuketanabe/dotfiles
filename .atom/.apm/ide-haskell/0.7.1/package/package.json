{"name":"ide-haskell","main":"./lib/ide-haskell","version":"0.7.1","description":"Haskell IDE","repository":{"type":"git","url":"https://github.com/atom-haskell/ide-haskell"},"license":"MIT","engines":{"atom":">=0.174.0 <2.0.0"},"consumedServices":{"haskell-ide-backend":{"versions":{"0.1.2":"consumeBackend","^1.0.0":"consumeBackend"}}},"dependencies":{"temp":"^0.8.1","atom-space-pen-views":"^2.0.3","sub-atom":"^1.0.0","atom-backend-helper":"~1.1.0"},"readme":"# IDE-Haskell [![Join the chat at https://gitter.im/atom-haskell/ide-haskell](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/atom-haskell/ide-haskell?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nWelcome to IDE-Haskell plugin for amazing [Atom](http://atom.io) editor! This\nplugin is intended to help you with development in\n[Haskell](http://haskell.org).\n\n## Implemented features\n\n#### Haskell project autodetection\n\nIDE-Haskell works only with Haskell projects. When you open Cabal project in\nAtom, or simply open a Haskell source file, IDE-Haskell will start\nautomatically.\n\n#### Errors, warnings and linter\n\nAfter saving the current file the check and linter processes will be executed.\nAfter processes are finished the results can be seen in output panel. You can\nsee different kind of results by switching `Errors`, `Warnings` and `Lints` tab\nbuttons. If you click on message's file name in output panel, Atom will open\nthis file and put cursor near problem that triggered output message.\n\nCheck results can also be seen in left editor gutter (near line numbers) as\nicons. If you hover mouse pointer over such an icon, a tooltip will be shown\nwith problem description. Results are highlighted inside editor as well, so you\ncan easily determine where the problem is.\n\n![Errors, warnings and linter](http://atom-haskell.github.io/ide-haskell/images/check.gif)\n\n#### Get type/info\n\nYou can get type of any expression and get info on any symbol.\n\nThere are two options to do so.\n\nFirst one is to hover mouse pointer over any Haskell source in editor, or any\nselection. By default, this will show type for expression/selecton under cursor.\nYou can change this behavior to show info for symbol, or disable it completely\nin IDE-Haskell settings.\n\nAnother option is to use keyboard to get type/info under cursor. No default\nbindings are specified, but you can specify them in IDE-Haskell settings.\n\nSee [Configuration](#configuration) for more information.\n\n![Get type at point](http://atom-haskell.github.io/ide-haskell/images/types.gif)\n\n#### Autocompletion\n\nAutocompletion facilities have been moved to\n[autocomplete-haskell](https://atom.io/packages/autocomplete-haskell) package.\n\nPlease install it if you want autocompletion.\n\n#### Code beautify\n\nYou can use `stylish-haskell` utility to indent pragmas, imports and data type\ndefinitions. Simply select `Prettify` from Haskel IDE menu to apply\n`stylish-haskell` to current file.\n\n![Code beautify](http://atom-haskell.github.io/ide-haskell/images/beautify.gif)\n\n## Requirements\n\nAtom packages:\n* [haskell-ghc-mod](https://atom.io/packages/haskell-ghc-mod)\n* [language-haskell](https://atom.io/packages/language-haskell)\n* [autocomplete-haskell](https://atom.io/packages/autocomplete-haskell) (optional, recommended)\n\nBinaries:\n* [stylish-haskell](https://github.com/jaspervdj/stylish-haskell)\n\n## Installation\n\n```\n$ apm install language-haskell haskell-ghc-mod ide-haskell autocomplete-haskell\n```\n\n## Configuration\n\nPackage is fully configurable via **Edit → Preferences → Packages → ide-haskell\n→ Settings**\n\nYou will likely need to specify full paths to `stylish-haskell`, if it is not in\nyour `PATH`, at the very least.\n\nYou might also want look into configuring haskell-ghc-mod: [haskell-ghc-mod README](https://github.com/atom-haskell/haskell-ghc-mod#haskell-ghc-mod-atom-package)\n\n## TODO\n\n- [x] Cabal project autodetection\n- [x] Errors, warnings and linter\n- [x] Get type at point\n- [x] Autocompletion\n- [x] Code beautify\n- [ ] Jump to definition\n- [ ] Who calls and vice versa\n- [ ] Interactive REPL\n- [ ] Cabal project management\n- [ ] Documentation support\n\n## Changelog\n\nChangelog is available [here][CHANGELOG].\n\n## License\n\nCopyright © 2015 Alexander Chaika, Nikolay Yakimov\n\nContributors:\n* Daniel Beskin\n* John Quigley\n* Luka Horvat\n\nSee the [LICENSE.md][LICENSE] for details.\n\n[CHANGELOG]: https://github.com/atom-haskell/ide-haskell/blob/master/CHANGELOG.md\n[LICENSE]: https://github.com/atom-haskell/ide-haskell/blob/master/LICENSE.md\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/atom-haskell/ide-haskell/issues"},"homepage":"https://github.com/atom-haskell/ide-haskell","_id":"ide-haskell@0.7.1","_shasum":"97ca034232469d39f48e951ea0418740452853a7","_resolved":"file:../d-115715-4467-1u3yv9y/package.tgz","_from":"../d-115715-4467-1u3yv9y/package.tgz"}