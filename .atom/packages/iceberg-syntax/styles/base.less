@import 'syntax-variables';

atom-text-editor, :host {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }
  .indent-guide {
    color: @syntax-indent-guide-color;
  }
  .invisible-character {
    color: @syntax-invisible-character-color;
  }
  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }
      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }
  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @syntax-gutter-text-color;
  }
  .invisible {
    color: @syntax-text-color;
  }
  .cursor {
    color: @syntax-cursor-color;
  }
  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor::shadow {
  .bracket-matcher {
    .region {
      background-color: lighten(@syntax-background-color, 20%);
      color: lighten(@syntax-text-color, 50%);
      border-width: 0;
    }
  }
  .highlight {
    &.find-result .region {
      background-color: fade(@syntax-text-color, 20%);
      border-radius: 2px;
      border-width: 0;
    }
    &.current-result .region,
    &.current-result ~ &.selection .region {
      background-color: fade(@orange, 40%);
      border-radius: 2px;
      border-width: 0;
    }
  }
  .spell-check-misspelling .region {
    border-bottom: @red dotted 1px;
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}

atom-text-editor::shadow {
  .comment {
    color: @syntax-comment-color;
  }
  .constant {
    color: @purple;

    &.character.escape {
      color: @cyan;
    }
    &.numeric {
      color: @purple;
    }
    &.other.color {
      color: @cyan;
    }
    &.other.symbol {
      color: @green;
    }
  }
  .entity {
    &.name.class,
    &.name.type.class {
      color: @light-orange;
    }
    &.name.function {
      color: @blue;
    }
    &.name.section {
      color: @blue;
    }
    &.name.tag {
      color: @blue;
    }
    &.name.type {
      color: @light-orange;
    }
    &.other.attribute-name {
      color: @purple;

      &.id {
        color: @blue;
      }
    }
    &.other.inherited-class {
      color: @green;
    }
  }
  .invalid.illegal {
    background-color: @red;
    color: @syntax-background-color;
  }
  .keyword {
    color: @blue;

    &.control {
      color: @blue;
    }
    &.operator {
      color: @syntax-text-color;
    }
    &.other.special-method {
      color: @blue;
    }
    &.other.unit {
      color: @purple;
    }
  }
  .meta {
    &.class {
      color: @light-orange;
    }
    &.link {
      color: @orange;
    }
    &.require {
      color: @blue;
    }
    &.selector {
      color: @purple;
    }
    &.separator {
      background-color: @syntax-comment-color;
      color: @syntax-text-color;
    }
  }
  .none {
    color: @syntax-text-color;
  }
  .punctuation {
    &.definition {
      &.comment {
        color: @syntax-comment-color;
      }
      &.array,
      &.parameters,
      &.string,
      &.variable {
        color: @syntax-text-color;
      }
      &.bold {
        color: @light-orange;
        font-weight: bold;
      }
      &.heading,
      &.identity {
        color: @blue;
      }
      &.italic {
        color: @purple;
        font-style: italic;
      }
    }
    &.section.embedded {
      color: @green;
    }
  }
  .storage {
    color: @purple;
  }
  .string {
    color: @cyan;

    &.regexp {
      color: @cyan;

      .source.ruby.embedded {
        color: @orange;
      }
    }
    &.other.link {
      color: @red;
    }
  }
  .support {
    &.class {
      color: @light-orange;
    }
    &.function  {
      color: @cyan;

      &.any-method {
        color: @blue;
      }
    }
  }
  .variable {
    color: @green;

    &.interpolation {
      color: darken(@green, 10%);
    }
    &.parameter.function {
      color: @syntax-text-color;
    }
  }
}

// Grammars
atom-text-editor::shadow {
  .markup {
    &.bold {
      color: @orange;
      font-weight: bold;
    }
    &.changed {
      color: @purple;
    }
    &.deleted {
      color: @red;
    }
    &.heading .punctuation.definition.heading {
      color: @blue;
    }
    &.inserted {
      color: @green;
    }
    &.italic {
      color: @purple;
      font-style: italic;
    }
    &.list {
      color: @red;
    }
    &.quote {
      color: @orange;
    }
    &.raw.inline {
      color: @green;
    }
  }

  .diff {
    &.markup.deleted {
      &:extend(atom-text-editor::shadow .markup.deleted);
    }
    &.markup.inserted {
      &:extend(atom-text-editor::shadow .markup.inserted);
    }
    &.meta.header {
      color: @blue;
    }
    &.meta.range,
    &.meta.range.unified {
      color: @purple;
    }
  }
  .gfm {
    &.entity {
      color: @blue;
    }
    &.heading {
      color: @green;
    }
    &.list {
      color: @blue;
    }
    &.raw {
      color: @cyan;
    }
  }
  .js {
    &.class {
      color: @blue;
    }
    &.constant {
      color: @syntax-text-color;
    }
    &.constant.boolean {
      color: @purple;
    }
    &.entity.name.function {
      color: @syntax-text-color;
    }
    &.entity.name.function.constructor {
      color: @blue;
    }
    &.keyword.operator {
      color: @blue;
    }
    &.property {
      color: @syntax-text-color;
    }
    &.punctuation.definition.string {
      color: @cyan;
    }
    &.variable {
      color: @syntax-text-color;
    }
    &.variable.language {
      color: @green;
    }
  }
}
